/**
 * @author Tim
 * @overview generated by ghoti-cli
 * @fileoverview Page set PageGhotiEdittask
 */

import * as React from 'react';
import * as Component from '../component/import';
import * as Func from '../func/import';
import * as Lambda from '../lambda/import';
import logo from './logo';
import { ITask, IPage } from './interface';
import * as $ from "jquery";
import * as fs from 'fs';

import Config from '../config/config';

export interface IProps {
    page: IPage;
    updatePage: (page: IPage, next?: () => void) => void;
}

export interface IState {

}

class PageGhotiEdittask extends React.Component<IProps, IState> {

    state = {
        Address: '',
        AssetNum: '',
        StartDate: '',
        City: '',
        Stage: '',
        Invoice: '',
        DueDate: '',
        CompletionDate: '',
        BillTo: '',
        data: [],
    };
    public componentDidMount() {
        $.ajax({
            url: 'https://rpntechserver.appspot.com/findTaskById?task_id=' + localStorage.getItem("currTask"),
            //url: 'http://localhost:8080/login',
            headers: {
                Authorization: "Bearer " + localStorage.getItem('Token'),
            },
            method: 'GET',
            datatype: "json",
            data: JSON.stringify({
            }),
            success: (function (result) {
                console.log(result);
                this.setState({ Address: result.Address });
                this.setState({ AssetNum: result.asset_num });
                this.setState({ StartDate: result.StartDate });
                this.setState({ City: result.City });
                this.setState({ Stage: result.Stage });
                this.setState({ Invoice: result.Invoice });
                this.setState({ BillTo: result.BillTo });
                this.setState({ CompletionDate: result.CompletionDate });
                this.setState({ DueDate: result.InvoiceDate });



            }).bind(this),
        });
    }

    public constructor(props) {
        super(props);
        this.submitTask = this.submitTask.bind(this);
        this.handleChange = this.handleChange.bind(this);
        this.showTable = this.showTable.bind(this);
        this.readJson = this.readJson.bind(this);


    }

    public render() {
        return (<div className="main">
            <div className="title">
                <div style={{
                    display: 'flex',
                    height: '100px',
                    alignItems: 'center',
                    width: '100%'
                }}>
                    <img src={logo} alt="logo" style={{
                        width: '70px',
                        height: '50px',
                    }} />
                    <div style={{
                        flex: 1,
                        paddingLeft: '10px',
                        paddingTop: '20px',
                        display: 'inline',
                        fontSize: '20px',
                        color: 'darkblue',
                        fontWeight: 'bold',
                    }}>
                        Repair and Preservation Network, LLC
            </div>
                    <div style={{
                        marginTop: '20px',
                        marginRight: '20px',
                        textAlign: 'center',
                        width: '30%'

                    }}>
                        <input type="text" id="myInput" placeholder="Search for Addr.." title="Search Task" />
                    </div>
                    <div style={{
                        marginTop: '20px',
                        marginRight: '10px',
                        textAlign: 'right',
                    }}>
                        <button className='link' title='Log out' onClick={this.logout}><ins>Log Out</ins></button>
                    </div>
                </div>
            </div>
            <div className="space">
                <div style={{
                    alignItems: 'center',
                    textAlign: 'center',
                    marginTop: '10px',
                    width: '100%',
                }}>
                    Welcome to Repair and Preservation Network Company!
            </div>
            </div>
            <div className="menu">
                <div style={{
                    margin: '15px',
                }}>
                    <button className="link" title="View Task" onClick={this.changeStatus}><ins>View Task</ins></button>
                </div>
                <div style={{
                    margin: '5px',
                }}>
                    <button className="link" title="Add Task" onClick={this.addTask}><ins>Add Task</ins></button>
                </div></div>
            <div style={{
                marginLeft: '10px',
                marginTop: '10px',
            }}>
                <select id='setStage' onChange={e => this.changeStage(e.target.value)}>
                    <option value="0">Initial</option>
                    <option value="1">Bid</option>
                    <option value="2">Work Order</option>
                    <option value="3">Invoice</option>
                </select></div>
            {this.showTable()}
            <button
                style={{
                    marginLeft: '10px',
                    width: '60px',
                    height: '25px',
                }}
                title="Submit Task" onClick={this.submitTask}><ins>Submit</ins></button>
            <input
                style={{
                    marginTop: '10px',
                    marginLeft: '10px',
                    width: '60px',
                    height: '25px',
                }}
                type="file" id="readJson" name="json" onChange={(e) => { this.readJson(e.target.files) }} />
            <input
                style={{
                    marginTop: '10px',
                    marginLeft: '10px',
                    width: '60px',
                    height: '25px',
                }}
                type="file" id="fileUpload" onChange={(e) => { this.handleChange(e.target.files) }} />
        </div>);
    }


    protected readJson(selectorFiles: FileList) {
        var json;
        var file = selectorFiles[0];
        var reader = new FileReader();
        reader.onload = function (event) {
            json = JSON.parse(event.target.result);
            $.ajax({
                url: 'https://rpntechserver.appspot.com/',
                //url: 'http://localhost:8080/login',
                method: 'POST',
                datatype: "json",
                headers: {
                    Authorization: "Bearer " + localStorage.getItem('Token'),
                },
                data: {
                    taskId: localStorage.getItem('currTask'),
                    username: '',
                    json
                },
                success: function (data) {
                    console.log(data);
                    //this.props.history.push('/main');
                }.bind(this),
            });
        }.bind(this);
        reader.readAsText(file);

    }

    protected showTable() {
        if (this.state.Stage === '0') {
            return <div><table id="edittask">
                <tr>Property Address <input className="text" id='propaddr' value={this.state.Address}
                    onChange={e => this.AddrChange(e.target.value)} /></tr>
                <tr>Asset Number <input className="text" id='assetnum' value={this.state.AssetNum}
                    onChange={e => this.AssetChange(e.target.value)} /></tr>
                <tr>Start Date      <input className="text" id='startdate' value={this.state.StartDate}
                    onChange={e => this.StartDChange(e.target.value)} /></tr>
                <tr>City      <input className="text" id='city' value={this.state.City}
                    onChange={e => this.CityChange(e.target.value)} /></tr>
                <tr>Stage <input className="text" id='stage' value={this.state.Stage}
                    onChange={e => this.StageChange(e.target.value)} /></tr>
            </table>


            </div>
        }
        else if (this.state.Stage === '1') {
            return <div><table id="generalInfo">
                <tr>Property Address <input className="text" id='propaddr' value={this.state.Address}
                    onChange={e => this.AddrChange(e.target.value)} /></tr>
                <tr>Asset Number <input className="text" id='assetnum' value={this.state.AssetNum}
                    onChange={e => this.AssetChange(e.target.value)} /></tr>
                <tr>Start Date      <input className="text" id='startdate' value={this.state.StartDate}
                    onChange={e => this.StartDChange(e.target.value)} /></tr>
                <tr>City      <input className="text" id='city' value={this.state.City}
                    onChange={e => this.CityChange(e.target.value)} /></tr>
                <tr>Stage <input className="text" id='stage' value={this.state.Stage}
                    onChange={e => this.StageChange(e.target.value)} /></tr>
                <tr>Invoice <input className="text" id='invoice' value={this.state.Invoice}
                    onChange={e => this.InvoiceChange(e.target.value)} /></tr>
                <tr>CompletionDate <input className="text" id='cdate' value={this.state.CompletionDate}
                    onChange={e => this.CDateChange(e.target.value)} /></tr>
                <tr>DueDate <input className="text" id='idate' value={this.state.DueDate}
                    onChange={e => this.IDateChange(e.target.value)} /></tr>
                <tr>BillTo <input className="text" id='billto' value={this.state.BillTo}
                    onChange={e => this.BillToChange(e.target.value)} /></tr>
            </table>
                <table>

                </table>
            </div>
        }
        else {
            return <div> 2 </div>
        }
    }

    protected changeStage(value) {
        console.log(value);
        this.setState({
            Stage: value
        });
    }
    protected IDateChange(value) {
        this.setState({
            DueDate: value
        });
    }
    protected CDateChange(value) {
        this.setState({
            CompletionDate: value
        });
    }
    protected BillToChange(value) {
        this.setState({
            BillTo: value
        });
    }
    protected InvoiceChange(value) {
        this.setState({
            Invoice: value
        });
    }
    protected handleChange(selectorFiles: FileList) {
        var data;
        var file = selectorFiles[0];
        var reader = new FileReader();
        reader.onload = function (event) {
            data = JSON.parse(event.target.result);
            console.log(data.completionDate);
            this.setState({ Address: data.address });
            this.setState({ DueDate: data.invoiceDate });
            this.setState({ CompletionDate: data.completionDate });
            this.setState({ Invoice: data.invoice });
            this.setState({ BillTo: data.billTo });
            //console.log(this.state.Address);
        }.bind(this);
        reader.readAsText(file);
        //console.log(data);
    }
    protected AddrChange(value) {
        this.setState({
            Address: value
        });
    }
    protected AssetChange(value) {
        this.setState({
            AssetNum: value
        });
    }
    protected StartDChange(value) {
        this.setState({
            StartDate: value
        });
    }
    protected StageChange(value) {
        this.setState({
            Stage: value
        });
    }
    protected CityChange(value) {
        this.setState({
            City: value
        });
    }
    protected logout() {

    }
    protected changeStatus() {

    }
    protected addTask() {

    }


    protected submitTask() {
        var temp;
        $.ajax({
            url: 'https://rpntechserver.appspot.com/updateTask?task_id=' + localStorage.getItem("currTask"),
            //url: 'http://localhost:8080/login',
            method: 'POST',
            datatype: "json",
            headers: {
                Authorization: "Bearer " + localStorage.getItem('Token'),
            },
            data: JSON.stringify({
                asset_num: $('#assetnum').val(),
                startDate: $('#startdate').val(),
                city: $('#city').val(),
                address: $('#propaddr').val(),
                stage: $('#stage').val(),
                Invoice: $('#invoice').val(),
                CompletionDate: $('#cdate').val(),
                InvoiceDate: $('#idate').val(),
                billTo: $('#billto').val(),

            }),
            success: function (data) {
                console.log(data);
                this.props.history.push('/main');
            }.bind(this),
        });
    }
}

export default PageGhotiEdittask;
