/**
 * @author Tim
 * @overview generated by ghoti-cli
 * @fileoverview Page set PageGhotiOrdertask
 */

import * as React from 'react';
import * as Component from '../component/import';
import * as Func from '../func/import';
import * as Lambda from '../lambda/import';
import logo from './logo';
import { IItem, IPage } from './interface';
import * as $ from "jquery";
import * as fs from 'fs';

import Config from '../config/config';

export interface IProps {
    page: IPage;
    updatePage: (page: IPage, next?: () => void) => void;
    history: any;
}

export interface IState {

}

class PageGhotiOrdertask extends React.Component<IProps, IState> {
    state = {
        data:[],
        alluser: [],
        currUser: '',


    };
    public componentDidMount() {
        $.ajax({
            url: 'https://rpntechserver.appspot.com/findAllTasks',

            headers: {
                Authorization: "Bearer " + localStorage.getItem('Token'),
            },
            method: 'GET',
            datatype: "json",
            data: JSON.stringify({
            }),
            success: (function (result) {
                //console.log(result);
                this.setState({ data: result });
            }).bind(this),
        });

        $.ajax({
            url: 'https://rpntechserver.appspot.com/findAllUsers',

            headers: {
                Authorization: "Bearer " + localStorage.getItem('Token'),
            },
            method: 'GET',
            datatype: "json",
            data: JSON.stringify({
            }),
            success: (function (result) {
                //console.log(result);
                this.setState({ alluser: result });
            }).bind(this),
        });
    }

    public constructor(props) {
        super(props);
        this.submitTask = this.submitTask.bind(this);
        this.changeStatus = this.changeStatus.bind(this);
        this.changeUser = this.changeUser.bind(this);
        this.editTask = this.editTask.bind(this);

    }

    public render() {
        return (<div className="main">
            <div className="title">
                <div style={{
                    display: 'flex',
                    height: '100px',
                    alignItems: 'center',
                    width: '100%'
                }}>
                    <img src={logo} alt="logo" style={{
                        width: '70px',
                        height: '50px',
                    }} />
                    <div style={{
                        flex: 1,
                        paddingLeft: '10px',
                        paddingTop: '20px',
                        display: 'inline',
                        fontSize: '20px',
                        color: 'darkblue',
                        fontWeight: 'bold',
                    }}>
                        Repair and Preservation Network, LLC
            </div>
                    {/* <div style={{
                        marginTop: '20px',
                        marginRight: '10px',
                        textAlign: 'right',
                    }}>
                        <button className='link' title='Log out' onClick={this.logout}><ins>Log Out</ins></button>
                    </div> */}
                </div>
            </div>
            <div className="space">
                <div style={{
                    alignItems: 'center',
                    textAlign: 'center',
                    marginTop: '10px',
                    width: '100%',
                }}>
                    Welcome to Repair and Preservation Network Company!
            </div>
            </div>
            <div className="menu">
                <div style={{
                    margin: '15px',
                }}>
                    <button className="link" title="View Task" onClick={this.changeStatus}><ins>View Task</ins></button>
                </div></div>

            <div>User:
                    <select id='setUser' onChange={e => { this.changeUser(e.target.value ) }}>
                    <option>all</option>
                    {this.state.alluser.map(function (item, key) {
                        return (
                            <option>{item.Username}</option>
                        )
                    }.bind(this))}
                </select>
            </div>
            <table className="table table-striped table-hover table-bordered table-sm" id='taskT'>
                    <thead>
                        <tr>
                            {/* <th></th> */}
                            <th>Action</th>
                            <th>Property Address</th>
                            {/* <th>Asset Number</th>
                            <th>Due Date</th>
                            <th>User</th>
                            <th>CurrStage</th>
                            <th>Status</th> */}
                        </tr>
                    </thead>
                    <tbody>{this.state.data.map(function (item, key) {
                        return(
                            <tr key={key}>
                                <td><button style={{
                                    marginRight: '5px',
                                    marginTop: '5px'
                                }} title="edit" className="btn btn-primary btn-sm" onClick={this.editTask.bind(this, item)}><ins>Edit</ins></button>
                                    
                                </td>
                                <td>{item.Address}</td>
                                
                            </tr>
                        )
                    }.bind(this))
                }
                </tbody>
                </table>
            <button
                style={{
                    marginLeft: '10px',
                    marginTop: '5px',
                    width: '60px',
                    height: '28px',
                    fontSize: '14px',
                }}
                title="Submit Task" onClick={this.submitTask}><ins>Submit</ins></button>
            {/* <input
                style={{
                    marginTop: '10px',
                    marginLeft: '10px',
                    width: '60px',
                    height: '25px',
                    fontSize: '14px',
                }}
                type="file" id="fileUpload" onChange={(e) => { this.handleChange(e.target.files) }} /> */}
        </div>);

    }

    protected editTask(item){

    }

    protected changeUser(user){

    }
    
    protected changeStatus() {
        this.props.history.push('/main');
    }
    

    protected submitTask() {
        $.ajax({
            url: 'https://rpntechserver.appspot.com/register',
            //url: 'http://localhost:8080/login',
            method: 'POST',
            datatype: "json",
            headers: {
                Authorization: "Bearer " + localStorage.getItem('Token'),
            },
            data: JSON.stringify({
                username: $('#username').val(),
                password: $('#password').val(),
                authority: $('#authority').val(),
                firstname: $('#firstname').val(),
                lastname: $('#lastname').val(),
                email: $('#email').val(),
                phone: $('#phone').val(),
            }),
            success: function (data) {
                console.log(data);
                this.props.history.push('/main');
            }.bind(this),
        });
    }
}

export default PageGhotiOrdertask;