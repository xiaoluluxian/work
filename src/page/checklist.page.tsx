/**
 * @author Tim
 * @overview generated by ghoti-cli
 * @fileoverview Page set PageGhotiChecklist
 */

import * as React from 'react';
import * as Component from '../component/import';
import * as Func from '../func/import';
import * as Lambda from '../lambda/import';
import * as $ from "jquery";
import * as jsPDF from "jspdf";
import "jspdf-autotable";

import Config from '../config/config';

export interface IProps {
    history:any
}

export interface IState {

}



class PageGhotiChecklist extends React.Component<IProps, IState> {
    state = {
        checklist: [],
        Comment: ""
    }
    public componentDidMount() {
        $.ajax({
            url: "https://rpnserver.appspot.com/findChecklistByTask?task_id=" + localStorage.getItem("currTask"),
            headers: {
                Authorization: "Bearer " + localStorage.getItem('Token'),
            },
            method: 'GET',
            datatype: "json",
            data: JSON.stringify({
            }),
            success: (function (result) {
                // console.log(result);
                this.setState({ checklist: result });
            }).bind(this),
        });
        $.ajax({
            url: 'https://rpnserver.appspot.com/findTaskById?task_id=' + localStorage.getItem("currTask"),
            headers: {
                Authorization: "Bearer " + localStorage.getItem('Token'),
            },
            method: 'GET',
            datatype: "json",
            data: JSON.stringify({
            }),
            success: (function (result) {
                // console.log(result);
                this.setState({ Comment: result.Comment });
            }).bind(this),
        })
    }
    public constructor(props) {
        super(props);
    }

    public render() {
        return (<div>
            {/* start */}
            <button id="backbtn" onClick={()=>{
                this.props.history.push("/edittask");
            }}>back</button>
            <table style={{ marginBottom: "10px" }} id="check_list">

                <tbody>
                    {this.state.checklist.map(function (item, key) {

                        let answers = item.answers;
                        return (
                            <React.Fragment key={key}>
                                <tr>
                                    <td style={{
                                        backgroundColor: "lightblue",
                                        fontWeight: "bold",
                                        // color:"white"
                                    }}>
                                        {item.Category}</td>
                                    <td style={{
                                        backgroundColor: "lightblue",
                                        fontWeight: "bold",
                                        // color:"white"
                                    }}>Answer</td>
                                </tr>
                                {item.questions.map(function (item, key) {
                                    return (
                                        <tr key={key}>
                                            <td>{key + 1}. {item}</td>
                                            <td>{answers[key]}</td>
                                        </tr>
                                    )
                                })}
                                {/* {console.log(item)} */}
                            </React.Fragment>
                        )
                    })}

                    <tr style={{
                        backgroundColor: "lightblue",
                        fontWeight: "bold",
                        // color:"white"
                    }}><td colSpan={2}>Comments</td></tr>
                    <tr style={{
                        height: "100px"
                    }}>
                        <td colSpan={2} style={{
                            // height:"100px"
                            textAlign: "left"
                        }}>{this.state.Comment}</td>
                    </tr>
                </tbody>
            </table>
            {/* end */}
            <button id="pdfbtn" onClick={this.downloadPDF}>PDF</button>
        </div>);


    }

    protected downloadPDF() {
        let printbutton = document.getElementById("pdfbtn");
        let backbutton = document.getElementById("backbtn");
        printbutton.style.visibility = "hidden";
        backbutton.style.visibility = "hidden"
        window.print();
        printbutton.style.visibility = "visible";
        backbutton.style.visibility = "visible";

    }
}

export default PageGhotiChecklist;
