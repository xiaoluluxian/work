/**
 * @author Tim
 * @overview generated by ghoti-cli
 * @fileoverview Page set PageGhotiDeluser
 */

import * as React from 'react';
import * as Component from '../component/import';
import * as Func from '../func/import';
import * as Lambda from '../lambda/import';
import logo from "./logo";
import * as $ from "jquery";

import Config from '../config/config';

export interface IProps {
    history: any;
}



export interface IState {

}

class PageGhotiDeluser extends React.Component<IProps, IState> {
    state = {
        alluser: [],
        chooseUser:"",
    }
    public constructor(props) {
        super(props);
        this.changeStatus = this.changeStatus.bind(this);
        this.findUserByName = this.findUserByName.bind(this);
        this.delete = this.delete.bind(this);
        this.UserChange = this.UserChange.bind(this);
    }

    public componentDidMount() {
        $.ajax({
            url: 'https://rpnserver.appspot.com/findAllUsers',

            headers: {
                Authorization: "Bearer " + localStorage.getItem('Token'),
            },
            method: 'GET',
            datatype: "json",
            data: JSON.stringify({
            }),
            success: (function (result) {
                console.log(result);
                this.setState({ alluser: result });
            }).bind(this),
        });
    }

    public render() {
        return (
            <div className="main">
                <div className="title">
                    <div style={{
                        display: 'flex',
                        height: '100px',
                        alignItems: 'center',
                        width: '100%'
                    }}>
                        <img src={logo} alt="logo" style={{
                            width: '70px',
                            height: '50px',
                        }} />
                        <div style={{
                            flex: 1,
                            paddingLeft: '10px',
                            paddingTop: '20px',
                            display: 'inline',
                            fontSize: '20px',
                            color: 'darkblue',
                            fontWeight: 'bold',
                        }}>
                            Repair and Preservation Network, LLC
                        </div>
                    </div>
                </div>
                <div className="space">
                    <div style={{
                        alignItems: 'center',
                        textAlign: 'center',
                        marginTop: '10px',
                        width: '100%',
                    }}>
                        Welcome to Repair and Preservation Network Company!
            </div>
                </div>
                <div className="menu">
                    <div style={{
                        margin: '15px',
                    }}>
                        <button className="link" title="View Task" onClick={this.changeStatus}><ins>View Task</ins></button>
                    </div>
                </div>
                <table>
                    <th style={{ width: "15%" }}>User to Delete</th>
                    <select style={{ marginLeft:"10px"}} id='allUser' onChange={e => this.UserChange(e.target.value)}>
                        {this.state.alluser.map(function (item, key) {
                            return (

                                <option key={key}>{item.Firstname}</option>
                            )
                        }.bind(this))}
                    </select>
                </table>
                <button style={{ marginLeft: "10px" }} title="Delete" onClick={this.delete}>Delete</button>

            </div>
        )
    }

    protected findUserByName(name) {
        //console.log(this.state.newUser); tim001
        //console.log(name);
        for (let i = 0; i < this.state.alluser.length; i++) {
            if (this.state.alluser[i].Firstname === name) {
                return this.state.alluser[i].Username;
            }
        }
    }

    protected UserChange(e){
        this.setState({chooseUser:e});
    }

    protected changeStatus() {
        this.props.history.push("/main");
    }

    protected delete() {
        let name = this.findUserByName(this.state.chooseUser);
        console.log(name);
        $.ajax({
            url: 'https://rpnserver.appspot.com/removeUser?username='+name,
            headers: {
                Authorization: "Bearer " + localStorage.getItem('Token'),
            },
            method: 'POST',
            datatype: "json",
            data: JSON.stringify({
            }),
            success: (function (result) {
                this.props.history.push("/main");
            }).bind(this),
        });
    }
}

export default PageGhotiDeluser;
