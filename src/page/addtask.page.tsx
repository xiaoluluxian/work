/**
 * @author Tim
 * @overview generated by ghoti-cli
 * @fileoverview Page set PageGhotiAddtask
 */

import * as React from 'react';
import * as Component from '../component/import';
import * as Func from '../func/import';
import * as Lambda from '../lambda/import';
import logo from './logo';
import { IItem, IPage } from './interface';
import * as $ from "jquery";

import Config from '../config/config';

export interface IProps {
    page: IPage;
    updatePage: (page: IPage, next?: () => void) => void;
    history: any;
}

export interface IState {

}

class PageGhotiAddtask extends React.Component<IProps, IState> {
    state = {
        alluser: [],
        username: "",
        clients: [],
        company: "",
    };

    public constructor(props) {
        super(props);
        this.submitTask = this.submitTask.bind(this);
        this.changeStatus = this.changeStatus.bind(this);

    }

    public componentDidMount() {
        $.ajax({
            url: 'https://rpnserver.appspot.com/findAllUsers',

            headers: {
                Authorization: "Bearer " + localStorage.getItem('Token'),
            },
            method: 'GET',
            datatype: "json",
            data: JSON.stringify({
            }),
            success: (function (result) {
                //console.log(result);
                this.setState({ alluser: result });
            }).bind(this),
        });
        $.ajax({
            url: 'https://rpnserver.appspot.com/findAllClient',

            headers: {
                Authorization: "Bearer " + localStorage.getItem('Token'),
            },
            method: 'GET',
            datatype: "json",
            data: JSON.stringify({
            }),
            success: (function (result) {
                //console.log(result);
                this.setState({ clients: result });
            }).bind(this),
        });
    }

    public render() {
        return (<div className="main">
            <div className="title">
                <div style={{
                    display: 'flex',
                    height: '100px',
                    alignItems: 'center',
                    width: '100%'
                }}>
                    <img src={logo} alt="logo" style={{
                        width: '70px',
                        height: '50px',
                    }} />
                    <div style={{
                        flex: 1,
                        paddingLeft: '10px',
                        paddingTop: '20px',
                        display: 'inline',
                        fontSize: '20px',
                        color: 'darkblue',
                        fontWeight: 'bold',
                    }}>
                        Repair and Preservation Network, LLC
            </div>
                    <div style={{
                        marginTop: '20px',
                        marginRight: '20px',
                        textAlign: 'center',
                        width: '30%'

                    }}>
                        
                    </div>
                    {/* <div style={{
                        marginTop: '20px',
                        marginRight: '10px',
                        textAlign: 'right',
                    }}>
                        <button className='link' title='Log out' onClick={this.logout}><ins>Log Out</ins></button>
                    </div> */}
                </div>
            </div>
            <div className="space">
                <div style={{
                    alignItems: 'center',
                    textAlign: 'center',
                    marginTop: '10px',
                    width: '100%',
                }}>
                    Welcome to Repair and Preservation Network Company!
            </div>
            </div>
            <div className="menu">
                <div style={{
                    margin: '15px',
                }}>
                    <button className="link" title="View Task" onClick={this.changeStatus}><ins>View Task</ins></button>
                </div>
            </div>
            <div id="signupbox" style={{ marginTop: "30px" }} className="mainbox col-md-6 col-md-offset-3 col-sm-8 col-sm-offset-2">
                <div className="panel panel-info">
                    <form className="form-horizontal" method="post">
                        <div id="div_id_propertyaddress" className="form-group required">
                            <label className="control-label col-md-4  requiredField"> Property Address<span className="asteriskField"></span> </label>
                            <div className="controls col-md-8 ">
                                <input className="input-md  textinput textInput form-control" id="propaddr" name="propaddr" placeholder="Property Address" style={{ marginBottom: "5px" }} type="text" ></input>
                            </div>
                        </div>
                        <div id="div_id_assetnumber" className="form-group required">
                            <label className="control-label col-md-4  requiredField"> Asset Number<span className="asteriskField"></span> </label>
                            <div className="controls col-md-8 ">
                                <input className="input-md  textinput textInput form-control" id="assetnum" name="assetnum" placeholder="Asset Number" style={{ marginBottom: "5px" }} type="text" ></input>
                            </div>
                        </div>
                        <div id="div_id_startdate" className="form-group required">
                            <label className="control-label col-md-4  requiredField"> Start Date<span className="asteriskField"></span> </label>
                            <div className="controls col-md-8 ">
                                <input className="input-md  textinput textInput form-control" id="startdate" name="startdate" placeholder="Start Date" style={{ marginBottom: "5px" }} type="date" ></input>
                            </div>
                        </div>
                        <div id="div_id_duedate" className="form-group required">
                            <label className="control-label col-md-4  requiredField"> Due Date<span className="asteriskField"></span> </label>
                            <div className="controls col-md-8 ">
                                <input className="input-md  textinput textInput form-control" id="duedate" name="duedate" placeholder="Due Date" style={{ marginBottom: "5px" }} type="date" ></input>
                            </div>
                        </div>
                        <div id="div_id_city" className="form-group required">
                            <label className="control-label col-md-4  requiredField"> City/State/Zip<span className="asteriskField"></span> </label>
                            <div className="controls col-md-8 ">
                                <input className="input-md  textinput textInput form-control" id="city" name="city" placeholder="City/State/Zip" style={{ marginBottom: "5px" }} type="text" ></input>
                            </div>
                        </div>
                        <div id="div_id_desc" className="form-group required">
                            <label className="control-label col-md-4  requiredField"> Description<span className="asteriskField"></span> </label>
                            <div className="controls col-md-8 ">
                                <textarea className="input-md  textinput textInput form-control" id="description" name="description" placeholder="Desscription" style={{ marginBottom: "5px" }}></textarea>
                            </div>
                        </div>
                        <div id="div_id_LBnum" className="form-group required">
                            <label className="control-label col-md-4  requiredField">Lock Box Number<span className="asteriskField"></span> </label>
                            <div className="controls col-md-8 ">
                                <input className="input-md  textinput textInput form-control" id="lockboxnumber" name="lockboxnumber" placeholder="Lock Box Number" style={{ marginBottom: "5px" }} type="text" ></input>
                            </div>
                        </div>
                        <div id="div_id_client" className="form-group required">
                            <label className="control-label col-md-4  requiredField">Client<span className="asteriskField"></span> </label>
                            <div className="controls col-md-8 ">
                                <select className="form-control mb-2 mr-sm-2 mb-sm-0" id='client' onChange={e => { this.setState({ company: e.target.value }) }}>
                                    <option>Choose Client</option>
                                    {this.state.clients.map(function (item, key) {
                                        return (
                                            <option key={key}>{item.Company}</option>
                                        )
                                    }.bind(this))}
                                </select>
                            </div>
                        </div>
                        <div id="div_id_username" className="form-group required">
                            <label className="control-label col-md-4  requiredField">Username<span className="asteriskField"></span> </label>
                            <div className="controls col-md-8 ">
                                <select className="form-control mb-2 mr-sm-2 mb-sm-0" id='username' onChange={e => this.UserChange(e.target.value)}>
                                    <option>Choose User</option>
                                    {this.state.alluser.map(function (item, key) {
                                        return (
                                            <option key={key}>{item.Firstname}</option>
                                        )
                                    }.bind(this))}
                                </select>
                            </div>
                        </div>
                        {/* <div className="form-group controls col-md-8">
                        <button id="submit" type="submit" name="submit" className="btn btn-primary" onClick={this.submitTask} value="submit">Submit</button>
                        </div> */}
                        
                    </form>
                    <button id="submit" type="submit" name="submit" style={{marginBottom:"10px"}}className="btn btn-primary  col-md-8" onClick={this.submitTask} value="submit">Submit</button>
                </div> </div>
            {/* <table>

                <tr>Property Address <input className="text" id='propaddr' ></input></tr>
                <tr>Asset Number <input className="text" id='assetnum' ></input></tr>
                <tr>Start Date      <input type="date" id='startdate'></input></tr>
                <tr>Due Date <input type='date' id='duedate'></input></tr>
                <tr>City      <input className="text" id='city'></input></tr>
                <tr>Description      <textarea style={{
                    width: "425px",
                    height: "130px",
                    resize: "none"
                }} className="text" id='description'></textarea></tr>
                <tr>Lock Box Number      <input className="text" id='lockboxnumber'></input></tr>
                <tr>Client
                        <select id='client' onChange={e => { this.setState({ company: e.target.value }) }}>
                        <option>all</option>
                        {this.state.clients.map(function (item, key) {
                            return (
                                <option key={key}>{item.Company}</option>
                            )
                        }.bind(this))}
                    </select>
                </tr>
                <tr>Username
                    <select id='username' onChange={e => this.UserChange(e.target.value)}>
                        <option>all</option>
                        {this.state.alluser.map(function (item, key) {
                            return (

                                <option key={key}>{item.Firstname}</option>
                            )
                        }.bind(this))}
                    </select>
                </tr>
                

            </table> */}
            {/* <button
                style={{
                    marginLeft: '10px',
                    width: '60px',
                    height: '25px',
                    fontSize: '14px',
                }}
                title="Submit Task" onClick={this.submitTask}><ins>Submit</ins></button> */}
        </div>);

    }


    protected findUserByName(name) {
        //console.log(this.state.newUser); tim001

        for (let i = 0; i < this.state.alluser.length; i++) {
            if (this.state.alluser[i].Firstname === name) {
                return this.state.alluser[i].Username;
            }
        }
    }

    protected UserChange(value) {
        this.setState({ username: this.findUserByName(value) })
        //console.log(this.findUserByName(value));
    }
    protected logout() {

    }
    protected changeStatus() {
        this.props.history.push('/main');
    }
    protected addTask() {

    }


    protected submitTask() {
        let name = [];
        name.push(this.state.username);
        //console.log(this.state.username);

        $.ajax({
            url: 'https://rpnserver.appspot.com/initTask',
            //url: 'http://localhost:8080/login',
            method: 'POST',
            datatype: "json",
            headers: {
                Authorization: "Bearer " + localStorage.getItem('Token'),
            },
            data: JSON.stringify({
                asset_num: $('#assetnum').val(),
                StartDate: $('#startdate').val(),
                DueDate: $('#duedate').val(),
                City: $('#city').val(),
                Address: $('#propaddr').val(),
                Desc: $('#description').val(),
                keycode: $('#lockboxnumber').val(),
                client: this.state.company,
                Username: name,
                //stage:$('#stage').val()
            }),
            success: function (data) {
                //console.log(data);
                this.props.history.push('/main');
            }.bind(this),
        });
    }
}

export default PageGhotiAddtask;
