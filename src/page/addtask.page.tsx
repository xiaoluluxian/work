/**
 * @author Tim
 * @overview generated by ghoti-cli
 * @fileoverview Page set PageGhotiAddtask
 */

import * as React from 'react';
import * as Component from '../component/import';
import * as Func from '../func/import';
import * as Lambda from '../lambda/import';
import logo from './logo';
import { IItem, IPage } from './interface';
import * as $ from "jquery";

import Config from '../config/config';

export interface IProps {
    page: IPage;
    updatePage: (page: IPage, next?: () => void) => void;
    history: any;
}

export interface IState {

}

class PageGhotiAddtask extends React.Component<IProps, IState> {
    state = {
        alluser: [],
        username: "",
    };

    public constructor(props) {
        super(props);
        this.submitTask = this.submitTask.bind(this);
        this.changeStatus = this.changeStatus.bind(this);
        
    }

    public componentDidMount(){
        $.ajax({
            url: 'https://rpntechserver.appspot.com/findAllUsers',

            headers: {
                Authorization: "Bearer " + localStorage.getItem('Token'),
            },
            method: 'GET',
            datatype: "json",
            data: JSON.stringify({
            }),
            success: (function (result) {
                //console.log(result);
                this.setState({ alluser: result });
            }).bind(this),
        });
    }

    public render() {
        return (<div className="main">
            <div className="title">
                <div style={{
                    display: 'flex',
                    height: '100px',
                    alignItems: 'center',
                    width: '100%'
                }}>
                    <img src={logo} alt="logo" style={{
                        width: '70px',
                        height: '50px',
                    }} />
                    <div style={{
                        flex: 1,
                        paddingLeft: '10px',
                        paddingTop: '20px',
                        display: 'inline',
                        fontSize: '20px',
                        color: 'darkblue',
                        fontWeight: 'bold',
                    }}>
                        Repair and Preservation Network, LLC
            </div>
                    <div style={{
                        marginTop: '20px',
                        marginRight: '20px',
                        textAlign: 'center',
                        width: '30%'

                    }}>
                        <input type="text" id="myInput" placeholder="Search for Addr.." title="Search Task" />
                    </div>
                    {/* <div style={{
                        marginTop: '20px',
                        marginRight: '10px',
                        textAlign: 'right',
                    }}>
                        <button className='link' title='Log out' onClick={this.logout}><ins>Log Out</ins></button>
                    </div> */}
                </div>
            </div>
            <div className="space">
                <div style={{
                    alignItems: 'center',
                    textAlign: 'center',
                    marginTop: '10px',
                    width: '100%',
                }}>
                    Welcome to Repair and Preservation Network Company!
            </div>
            </div>
            <div className="menu">
                <div style={{
                    margin: '15px',
                }}>
                    <button className="link" title="View Task" onClick={this.changeStatus}><ins>View Task</ins></button>
                </div>
                </div>

            <table>
                
                    <tr>Property Address <input className="text" id = 'propaddr' ></input></tr>
                    <tr>Asset Number <input className="text" id = 'assetnum' ></input></tr>
                    <tr>Start Date      <input type="date" id= 'startdate'></input></tr>
                    <tr>Due Date <input type='date' id= 'duedate'></input></tr>
                    <tr>City      <input className="text" id= 'city'></input></tr>
                    <tr>Description      <textarea style={{
                                width: "425px",
                                height: "130px",
                                resize: "none"
                            }}className="text" id= 'description'></textarea></tr>
                    <tr>Lock Box Number      <input  className="text" id= 'lockboxnumber'></input></tr>
                    <tr>Username 
                    <select id='username' onChange={e => this.UserChange(e.target.value)}>
                            <option>all</option>
                            {this.state.alluser.map(function (item, key) {
                                return (

                                    <option>{item.Firstname}</option>
                                )
                            }.bind(this))}
                        </select>
                    </tr>
                    {/* <tr>Stage <input className="text" id='stage'></input></tr> */}
                
            </table>
            <button
            style={{
                marginLeft:'10px',
                width: '60px',
                height: '25px',
                fontSize: '14px',
            }}
            title="Submit Task" onClick={this.submitTask}><ins>Submit</ins></button>
        </div>);

    }
    protected findUserByName(name) {
        //console.log(this.state.newUser); tim001
        
        for (let i = 0; i < this.state.alluser.length; i++) {
            if (this.state.alluser[i].Firstname === name) {
                return this.state.alluser[i].Username;
            }
        }
    }

    protected UserChange(value){
        this.setState({username:this.findUserByName(value)})
        //console.log(this.findUserByName(value));
    }
    protected logout() {

    }
    protected changeStatus() {
        this.props.history.push('/main');
    }
    protected addTask(){

    }

    
    protected submitTask(){
        let name=[];
        name.push(this.state.username);
        //console.log(this.state.username);
        
        $.ajax({
            url: 'https://rpntechserver.appspot.com/initTask',
            //url: 'http://localhost:8080/login',
            method: 'POST',
            datatype: "json",
            headers: {
                Authorization:"Bearer " + localStorage.getItem('Token'),
            },
            data: JSON.stringify({
                asset_num:$('#assetnum').val(),
                StartDate:$('#startdate').val(),
                DueDate:$('#duedate').val(),
                City:$('#city').val(),
                Address:$('#propaddr').val(),
                Desc: $('#description').val(),
                keycode: $('#lockboxnumber').val(),
                Username: name,
                //stage:$('#stage').val()
            }),
            success: function (data) {
                //console.log(data);
                this.props.history.push('/main');
            }.bind(this),
        });
    }
}

export default PageGhotiAddtask;
